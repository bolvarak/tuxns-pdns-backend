///////////////////////////////////////////////////////////////////////////////
/// Definitions //////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

#ifndef TUXNS_BOOTSTRAP_H
#define TUXNS_BOOTSTRAP_H

///////////////////////////////////////////////////////////////////////////////
/// Headers //////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

#include "QtCore/QCommandLineOption"
#include "QtCore/QCommandLineParser"
#include "QtCore/QCoreApplication"
#include "QtCore/QObject"
#include "QtCore/QProcess"
#include "QtCore/QSettings"
#include "QtCore/QString"
#include "QtCore/QStringList"
#include "QtCore/QTimer"
#include "QtSql/QSqlDatabase"
#include "QtSql/QSqlError"
#include "Log.hpp"
#include "Configuration.hpp"
#include "Listener.hpp"

///////////////////////////////////////////////////////////////////////////////
/// TuxNS Namespace //////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

namespace TuxNS
{
	///////////////////////////////////////////////////////////////////////////
	/// TuxNS::Bootstrap Class Definition ////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////

	class Bootstrap : QObject
	{
		///////////////////////////////////////////////////////////////////////
		/// QObject Classification ///////////////////////////////////////////
		/////////////////////////////////////////////////////////////////////

		Q_OBJECT

		///////////////////////////////////////////////////////////////////////
		/// Protected Methods & Properties ///////////////////////////////////
		/////////////////////////////////////////////////////////////////////

		protected:

			///////////////////////////////////////////////////////////////////
			/// Constants ////////////////////////////////////////////////////
			/////////////////////////////////////////////////////////////////

			///////////////////////////////////////////////////////////////////
			/// Static Properties ////////////////////////////////////////////
			/////////////////////////////////////////////////////////////////

			///////////////////////////////////////////////////////////////////
			/// Properties ///////////////////////////////////////////////////
			/////////////////////////////////////////////////////////////////

			/**
			 * @paragraph This property contains the instance of our application
			 * @brief TuxNS::Bootstrap::mApplication
			 * @var QCoreApplication
			 */
			QCoreApplication mApplication;

			/**
			 * @paragraph This property contains our CLI input parser
			 * @brief TuxNS::Bootstrap::mInput
			 * @var QCommandLineParser*
			 */
			QCommandLineParser* mInput;

			/**
			 * @paragraph This property contains the instance of our listener
			 * @brief TuxNS::Bootstrap::mListener
			 * @var TuxNS::Listener*
			 */
			Listener* mListener;

			///////////////////////////////////////////////////////////////////
			/// Protected Methods ////////////////////////////////////////////
			/////////////////////////////////////////////////////////////////

			/**
			 * @paragraph This method processes the log settings into the service
			 * @brief TuxNS::Bootstrap::gatherLogSettings()
			 * @return bool
			 */
			bool gatherLogSettings();

			/**
			 * @paragraph This method processes the database settings into the service
			 * @brief TuxNS::Bootstrap::gatherDatabaseSettings()
			 * @return bool
			 */
			bool gatherDatabaseSettings();

			/**
			 * @paragraph This method processes the configuration file for the application
			 * @brief TuxNS::Bootstrap::processConfiguration()
			 * @return bool
			 */
			bool processConfiguration();

			/**
			 * @paragraph This method creates the arguments the service supports
			 * @brief TuxNS::Bootstrap::setupCLI()
			 * @return void
			 */
			void setupCLI();

		///////////////////////////////////////////////////////////////////////
		/// Public Methods & Properties //////////////////////////////////////
		/////////////////////////////////////////////////////////////////////

		public:

			///////////////////////////////////////////////////////////////////
			/// Constructor //////////////////////////////////////////////////
			/////////////////////////////////////////////////////////////////

			/**
			 * @paragraph This method instantiates the object with defaults
			 * @brief TuxNS::Bootstrap::Bootstrap()
			 * @param int intArguments
			 * @param char* chrArguments[]
			 * @param QObject* objParent [0]
			 */
			explicit Bootstrap(int intArguments, char* chrArguments[], QObject* objParent = 0);

			///////////////////////////////////////////////////////////////////
			/// Methods //////////////////////////////////////////////////////
			/////////////////////////////////////////////////////////////////

			/**
			 * @paragraph This method pauses the server
			 * @brief TuxNS::Bootstrap::pause()
			 * @return void
			 */
			void pause();

			/**
			 * @paragraph This method prepares the application for execution
			 * @brief TuxNS::Bootstrap::prepare()
			 * @return bool
			 */
			bool prepare();

			/**
			 * @paragraph This method resumes the server
			 * @brief TuxNS::Bootstrap::restart()
			 * @return void
			 */
			void resume();

			/**
			 * @paragraph This method starts the server
			 * @brief TuxNS::Bootstrap::start()
			 * @return bool
			 */
			bool start();

			/**
			 * @paragraph This method stops the server
			 * @brief TuxNS::Bootstrap::stop()
			 * @param bool blnIsRunning [false]
			 * @return void
			 */
			void stop();

			///////////////////////////////////////////////////////////////////
			/// Getters //////////////////////////////////////////////////////
			/////////////////////////////////////////////////////////////////

			/**
			 * @paragraph This method returns the application from the instance
			 * @brief TuxNS::Bootstrap::getApplication()
			 * @return QCoreApplication TuxNS::Bootstrap::mApplication
			 */
			inline QCoreApplication &getApplication() {
				// Return the application
				return this->mApplication;
			}

			///////////////////////////////////////////////////////////////////
			/// Setters //////////////////////////////////////////////////////
			/////////////////////////////////////////////////////////////////

		///////////////////////////////////////////////////////////////////////
		/// Signals //////////////////////////////////////////////////////////
		/////////////////////////////////////////////////////////////////////

		signals:

			/**
			 * @paragraph This signal fires when a shutdown request has been made
			 * @brief TuxNS::Bootstrap::shuttingDown()
			 * @return void
			 */
			void shuttingDown();



	///////////////////////////////////////////////////////////////////////////
	}; // End TuxNS::Bootstrap Class Definition //////////////////////////////
	/////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
} // End TuxNS Namespace /////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
#endif // End Definitions ////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////
